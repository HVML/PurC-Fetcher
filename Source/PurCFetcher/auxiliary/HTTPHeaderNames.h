
/*
 * Copyright (C) 2014 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

/// This file is generated by create-http-header-name-table, do not edit.

#ifndef HTTPHeaderNames_h
#define HTTPHeaderNames_h

#include <wtf/Forward.h>

namespace PurcFetcher {

enum class HTTPHeaderName {
    Accept,
    AcceptCharset,
    AcceptEncoding,
    AcceptLanguage,
    AcceptRanges,
    AccessControlAllowCredentials,
    AccessControlAllowHeaders,
    AccessControlAllowMethods,
    AccessControlAllowOrigin,
    AccessControlExposeHeaders,
    AccessControlMaxAge,
    AccessControlRequestHeaders,
    AccessControlRequestMethod,
    Age,
    Authorization,
    CacheControl,
    Connection,
    ContentDisposition,
    ContentEncoding,
    ContentLanguage,
    ContentLength,
    ContentLocation,
    ContentRange,
    ContentSecurityPolicy,
    ContentSecurityPolicyReportOnly,
    ContentType,
    Cookie,
    Cookie2,
    CrossOriginResourcePolicy,
    DNT,
    Date,
    DefaultStyle,
    ETag,
    Expect,
    Expires,
    Host,
    IcyMetaInt,
    IcyMetadata,
    IfMatch,
    IfModifiedSince,
    IfNoneMatch,
    IfRange,
    IfUnmodifiedSince,
    KeepAlive,
    LastEventID,
    LastModified,
    Link,
    Location,
    Origin,
    PingFrom,
    PingTo,
    Pragma,
    ProxyAuthorization,
    Purpose,
    Range,
    Referer,
    ReferrerPolicy,
    Refresh,
    SecWebSocketAccept,
    SecWebSocketExtensions,
    SecWebSocketKey,
    SecWebSocketProtocol,
    SecWebSocketVersion,
    ServerTiming,
    ServiceWorker,
    ServiceWorkerAllowed,
    SetCookie,
    SetCookie2,
    SourceMap,
    TE,
    TimingAllowOrigin,
    Trailer,
    TransferEncoding,
    Upgrade,
    UpgradeInsecureRequests,
    UserAgent,
    Vary,
    Via,
    XContentTypeOptions,
    XDNSPrefetchControl,
    XFrameOptions,
    XSourceMap,
    XTempTablet,
    XXSSProtection,
};

const unsigned numHTTPHeaderNames = 84;
const size_t minHTTPHeaderNameLength = 2;
const size_t maxHTTPHeaderNameLength = 35;

bool findHTTPHeaderName(StringView, HTTPHeaderName&);
PURCFETCHER_EXPORT StringView httpHeaderNameString(HTTPHeaderName);

} // namespace PurcFetcher

namespace WTF {

template<> struct EnumTraits<PurcFetcher::HTTPHeaderName> {
    using values = EnumValues<
        PurcFetcher::HTTPHeaderName,
        PurcFetcher::HTTPHeaderName::Accept,
        PurcFetcher::HTTPHeaderName::AcceptCharset,
        PurcFetcher::HTTPHeaderName::AcceptEncoding,
        PurcFetcher::HTTPHeaderName::AcceptLanguage,
        PurcFetcher::HTTPHeaderName::AcceptRanges,
        PurcFetcher::HTTPHeaderName::AccessControlAllowCredentials,
        PurcFetcher::HTTPHeaderName::AccessControlAllowHeaders,
        PurcFetcher::HTTPHeaderName::AccessControlAllowMethods,
        PurcFetcher::HTTPHeaderName::AccessControlAllowOrigin,
        PurcFetcher::HTTPHeaderName::AccessControlExposeHeaders,
        PurcFetcher::HTTPHeaderName::AccessControlMaxAge,
        PurcFetcher::HTTPHeaderName::AccessControlRequestHeaders,
        PurcFetcher::HTTPHeaderName::AccessControlRequestMethod,
        PurcFetcher::HTTPHeaderName::Age,
        PurcFetcher::HTTPHeaderName::Authorization,
        PurcFetcher::HTTPHeaderName::CacheControl,
        PurcFetcher::HTTPHeaderName::Connection,
        PurcFetcher::HTTPHeaderName::ContentDisposition,
        PurcFetcher::HTTPHeaderName::ContentEncoding,
        PurcFetcher::HTTPHeaderName::ContentLanguage,
        PurcFetcher::HTTPHeaderName::ContentLength,
        PurcFetcher::HTTPHeaderName::ContentLocation,
        PurcFetcher::HTTPHeaderName::ContentRange,
        PurcFetcher::HTTPHeaderName::ContentSecurityPolicy,
        PurcFetcher::HTTPHeaderName::ContentSecurityPolicyReportOnly,
        PurcFetcher::HTTPHeaderName::ContentType,
        PurcFetcher::HTTPHeaderName::Cookie,
        PurcFetcher::HTTPHeaderName::Cookie2,
        PurcFetcher::HTTPHeaderName::CrossOriginResourcePolicy,
        PurcFetcher::HTTPHeaderName::DNT,
        PurcFetcher::HTTPHeaderName::Date,
        PurcFetcher::HTTPHeaderName::DefaultStyle,
        PurcFetcher::HTTPHeaderName::ETag,
        PurcFetcher::HTTPHeaderName::Expect,
        PurcFetcher::HTTPHeaderName::Expires,
        PurcFetcher::HTTPHeaderName::Host,
        PurcFetcher::HTTPHeaderName::IcyMetaInt,
        PurcFetcher::HTTPHeaderName::IcyMetadata,
        PurcFetcher::HTTPHeaderName::IfMatch,
        PurcFetcher::HTTPHeaderName::IfModifiedSince,
        PurcFetcher::HTTPHeaderName::IfNoneMatch,
        PurcFetcher::HTTPHeaderName::IfRange,
        PurcFetcher::HTTPHeaderName::IfUnmodifiedSince,
        PurcFetcher::HTTPHeaderName::KeepAlive,
        PurcFetcher::HTTPHeaderName::LastEventID,
        PurcFetcher::HTTPHeaderName::LastModified,
        PurcFetcher::HTTPHeaderName::Link,
        PurcFetcher::HTTPHeaderName::Location,
        PurcFetcher::HTTPHeaderName::Origin,
        PurcFetcher::HTTPHeaderName::PingFrom,
        PurcFetcher::HTTPHeaderName::PingTo,
        PurcFetcher::HTTPHeaderName::Pragma,
        PurcFetcher::HTTPHeaderName::ProxyAuthorization,
        PurcFetcher::HTTPHeaderName::Purpose,
        PurcFetcher::HTTPHeaderName::Range,
        PurcFetcher::HTTPHeaderName::Referer,
        PurcFetcher::HTTPHeaderName::ReferrerPolicy,
        PurcFetcher::HTTPHeaderName::Refresh,
        PurcFetcher::HTTPHeaderName::SecWebSocketAccept,
        PurcFetcher::HTTPHeaderName::SecWebSocketExtensions,
        PurcFetcher::HTTPHeaderName::SecWebSocketKey,
        PurcFetcher::HTTPHeaderName::SecWebSocketProtocol,
        PurcFetcher::HTTPHeaderName::SecWebSocketVersion,
        PurcFetcher::HTTPHeaderName::ServerTiming,
        PurcFetcher::HTTPHeaderName::ServiceWorker,
        PurcFetcher::HTTPHeaderName::ServiceWorkerAllowed,
        PurcFetcher::HTTPHeaderName::SetCookie,
        PurcFetcher::HTTPHeaderName::SetCookie2,
        PurcFetcher::HTTPHeaderName::SourceMap,
        PurcFetcher::HTTPHeaderName::TE,
        PurcFetcher::HTTPHeaderName::TimingAllowOrigin,
        PurcFetcher::HTTPHeaderName::Trailer,
        PurcFetcher::HTTPHeaderName::TransferEncoding,
        PurcFetcher::HTTPHeaderName::Upgrade,
        PurcFetcher::HTTPHeaderName::UpgradeInsecureRequests,
        PurcFetcher::HTTPHeaderName::UserAgent,
        PurcFetcher::HTTPHeaderName::Vary,
        PurcFetcher::HTTPHeaderName::Via,
        PurcFetcher::HTTPHeaderName::XContentTypeOptions,
        PurcFetcher::HTTPHeaderName::XDNSPrefetchControl,
        PurcFetcher::HTTPHeaderName::XFrameOptions,
        PurcFetcher::HTTPHeaderName::XSourceMap,
        PurcFetcher::HTTPHeaderName::XTempTablet,
        PurcFetcher::HTTPHeaderName::XXSSProtection
    >;
};

} // namespace WTF

#endif // HTTPHeaderNames_h
